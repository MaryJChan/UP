<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com/up/mybatis/UPMapper.xml">

	<select id="newpdtview" resultType="pDTO" parameterType="String">
		SELECT * FROM new_pro_view
	</select>
	
	<select id="bestpdtview" resultType="pDTO" parameterType="String">
		SELECT * FROM best_pro_view
	</select>
	
	<select id="memidchk" resultType="mDTO">
		SELECT * FROM member WHERE mid = #{mid}
	</select>	
	
	<select id="memlogin" resultType="mDTO">
		SELECT mid, mpw FROM member WHERE mid = #{mid} AND mpw = #{mpw}
	</select>
	
	<select id="sessionlogin" resultType="mDTO">
		SELECT * FROM member WHERE mid = #{mid} AND mpw = #{mpw}
	</select>
	
	<insert id="meminsert" parameterType="mDTO">
		INSERT INTO member(mid, mpw, mname, msex, mbirth, mphone, mpostcode, madd, memail) 
		VALUES (#{mid}, #{mpw}, #{mname}, #{msex}, #{mbirth}, #{mphone}, #{mpostcode}, #{madd}, #{memail})
	</insert>
	
	<select id="boardListAll" resultType="bDTO">
		SELECT * FROM tblboard
		ORDER BY bno DESC
	</select>
	
	<!-- 시퀀스와 동일한 기능을하는 서브쿼리 -->
	<!-- ref는 bno와 같은 값을 사용해야한다 -->
	<insert id="boardRegister" parameterType="bDTO">
		INSERT INTO tblboard(bno, bno_step, title, category, content, writer, filename, filesize, ref, re_level) 
		VALUES ((SELECT nvl(max(bno)+1, 1) from tblboard), (SELECT nvl(max(bno_step)+1, 1) from tblboard), #{title}, #{category}, #{content}, #{writer}, #{filename}, #{filesize}, (SELECT nvl(max(ref)+1, 1) from tblboard), 0)
	</insert>
	
	<select id="boarddetailview" resultType="npDTO" parameterType="Integer">
		<!-- SELECT * FROM tblboard
		WHERE bno = #{bno} -->
		SELECT * FROM (
			SELECT
				bno, 
				bno_step,
				title, 
				category,
				content,				
				writer, 
				hits,
				goodcnt,
				filename,
				filesize,
				downcnt,
				ref,
				re_level,
				regdate, 
				LEAD(bno, 1 ) OVER (ORDER BY bno_step ASC) AS next_article_bno, 
				LEAD(TITLE, 1 , '다음글 없음') OVER (ORDER BY bno_step ASC) AS next_title, 
				LEAD(writer, 1 , '') OVER (ORDER BY bno_step ASC) AS next_writer, 
				LEAD(regdate, 1 , '') OVER (ORDER BY bno_step ASC) AS next_regdate, 
				LAG(bno, 1) OVER (ORDER BY bno_step ASC ) AS pre_article_bno, 
				LAG(TITLE, 1 , '이전글 없음') OVER (ORDER BY bno_step ASC ) pre_title, 
				LAG(writer, 1) OVER (ORDER BY bno_step ASC ) AS pre_writer, 
				LAG(regdate, 1) OVER (ORDER BY bno_step ASC ) AS pre_regdate
			FROM tblboard) 
		WHERE bno=#{bno}
	</select>
	
	<select id="boardAnswerBiew" resultType="bDTO">
		SELECT * FROM tblboard
		WHERE bno = #{bno}
	</select>
	
	<update id="boardupdate" parameterType="bDTO">
		UPDATE tblboard SET
		title = #{title}, category = #{category}, content = #{content}, filename = #{filename}, filesize = #{filesize}
		WHERE bno = #{bno}
	</update>
	
	<update id="boardhitsupdate" parameterType="Integer">
		UPDATE tblboard SET
		hits = hits + 1
		WHERE bno = #{bno}
	</update>
	
	<delete id="boarddelete" parameterType="Integer">
		DELETE FROM tblboard
		WHERE bno = #{bno}
	</delete>
	
	<delete id="boardReplyDelete2" parameterType="Integer">
		DELETE FROM boardreply
		WHERE bno = #{bno}
	</delete>
	
	<select id="countPaging" resultType="int">
		<!-- 부등호나 느낌표가 들어갈때에는 CDATA를 써줘야함(태그가 아님을 명시) -->
		<![CDATA[
			SELECT count(bno) FROM tblboard
			WHERE bno > 0
		]]>
	</select>
	
	<select id="searchCountPaging" resultType="int">
		<!-- 부등호나 느낌표가 들어갈때에는 CDATA를 써줘야함(태그가 아님을 명시) -->
		SELECT count(bno) FROM tblboard
		<choose>
			<when test="category.equals('전체')">
				<choose>					
					<when test="searchOption.equals('제목')">
						<![CDATA[
							WHERE bno > 0 AND title LIKE '%'||#{keyword}||'%'
						]]>
					</when>						
					<when test="searchOption.equals('작성자')">
						<![CDATA[
							WHERE bno > 0 AND writer LIKE '%'||#{keyword}||'%'
						]]>
					</when>
					<when test="searchOption.equals('내용')">
						<![CDATA[
							WHERE bno > 0 AND content LIKE '%'||#{keyword}||'%'
						]]>
					</when>
					<when test="searchOption.equals('제목+내용')">
						<![CDATA[
							WHERE bno > 0 AND title LIKE '%'||#{keyword}||'%' OR content LIKE '%'||#{keyword}||'%'
						]]>
					</when>
				</choose>
			</when>
			<otherwise>
				<choose>					
					<when test="searchOption.equals('제목')">
						<![CDATA[
							WHERE bno > 0 AND title LIKE '%'||#{keyword}||'%' AND category = #{category}
						]]>
					</when>						
					<when test="searchOption.equals('작성자')">
						<![CDATA[
							WHERE bno > 0 AND writer LIKE '%'||#{keyword}||'%' AND category = #{category}
						]]>
					</when>
					<when test="searchOption.equals('내용')">
						<![CDATA[
							WHERE bno > 0 AND content LIKE '%'||#{keyword}||'%' AND category = #{category}
						]]>
					</when>
					<when test="searchOption.equals('제목+내용')">
						<![CDATA[
							WHERE bno > 0 AND title LIKE '%'||#{keyword}||'%' OR content LIKE '%'||#{keyword}||'%' AND category = #{category}
						]]>
					</when>
				</choose>
			</otherwise>	
		</choose>			
	</select>
	 
	<select id="categoryCountPaging" resultType="int" parameterType="cDTO">
		SELECT count(bno) FROM tblboard
		<choose>
			<when test="category.equals('전체')">
			</when>
			<otherwise>
				WHERE category = #{category}
			</otherwise>			
		</choose>		
	</select>
	
	<select id="listCriteria" resultType="bDTO">
		<![CDATA[
			SELECT * FROM (
				SELECT rownum rnum, a.*
				FROM (
					SELECT b.*, (SELECT COUNT(*)
									 	 FROM boardreply d
										 WHERE b.bno = d.bno) replycnt
					FROM tblboard b
					WHERE bno > 0
					ORDER BY bno_step DESC
				) a
			)
			WHERE rnum BETWEEN #{pageStart} AND #{perPageNum}
		]]>
	</select>
	
	<insert id="boardReplyRegister" parameterType="rDTO">
		INSERT INTO boardreply(rno, rno_step, bno, sessionuser, replycomment, ref, re_level)
		VALUES ((SELECT nvl(max(rno)+1, 1) from boardreply), (SELECT nvl(max(rno_step)+1, 1) from boardreply), #{bno}, #{sessionUser}, #{replyComment}, (SELECT nvl(max(ref)+1, 1) from boardreply), 0)
	</insert>
	
	<select id="boardReplyView" resultType="rDTO" parameterType="Integer">
		SELECT * FROM boardreply
		WHERE bno = #{bno}
		ORDER BY rno_step DESC
	</select>
	
	<delete id="boardReplyDelete" parameterType="Integer">
		DELETE FROM boardreply
		WHERE rno_step = #{rno_step}
	</delete>
	
	<select id="boardOption" resultType="bDTO" parameterType="cDTO">		
			SELECT * FROM (
				SELECT rownum rnum, a.*
				FROM (
					SELECT b.*, (SELECT COUNT(*)
									 	 FROM boardreply d
										 WHERE b.bno = d.bno) replycnt, 
										 (SELECT COUNT(*) 
										 FROM boardrecomment drc 
										 WHERE b.bno = drc.bno) recommentcnt 
					FROM tblboard b
					<choose>
						<when test="category.equals('전체')">
							<choose>					
								<when test="searchOption.equals('제목')">
									<![CDATA[
										WHERE bno > 0 AND title LIKE '%'||#{keyword}||'%'
									]]>
								</when>						
								<when test="searchOption.equals('작성자')">
									<![CDATA[
										WHERE bno > 0 AND writer LIKE '%'||#{keyword}||'%'
									]]>
								</when>
								<when test="searchOption.equals('내용')">
									<![CDATA[
										WHERE bno > 0 AND content LIKE '%'||#{keyword}||'%'
									]]>
								</when>
								<when test="searchOption.equals('제목+내용')">
									<![CDATA[
										WHERE bno > 0 AND title LIKE '%'||#{keyword}||'%' OR content LIKE '%'||#{keyword}||'%'
									]]>
								</when>
							</choose>
						</when>
						<otherwise>
							<choose>					
								<when test="searchOption.equals('제목')">
									<![CDATA[
										WHERE bno > 0 AND title LIKE '%'||#{keyword}||'%' AND category = #{category}
									]]>
								</when>						
								<when test="searchOption.equals('작성자')">
									<![CDATA[
										WHERE bno > 0 AND writer LIKE '%'||#{keyword}||'%' AND category = #{category}
									]]>
								</when>
								<when test="searchOption.equals('내용')">
									<![CDATA[
										WHERE bno > 0 AND content LIKE '%'||#{keyword}||'%' AND category = #{category}
									]]>
								</when>
								<when test="searchOption.equals('제목+내용')">
									<![CDATA[
										WHERE bno > 0 AND title LIKE '%'||#{keyword}||'%' OR content LIKE '%'||#{keyword}||'%' AND category = #{category}
									]]>
								</when>
							</choose>
						</otherwise>						
					</choose>					
					ORDER BY 
					<choose>
						<when test="lineup.equals('번 호 ↓')">
							bno_step DESC
						</when>
						<when test="lineup.equals('번 호 ↑')">
							bno_step ASC
						</when>
						<when test="lineup.equals('제목 ↓')">
							title DESC,bno_step DESC
						</when>
						<when test="lineup.equals('제목 ↑')">
							title ASC,bno_step DESC
						</when>
						<when test="lineup.equals('작성자 ↓')">
							writer DESC,bno_step DESC
						</when>
						<when test="lineup.equals('작성자 ↑')">
							writer ASC,bno_step DESC
						</when>
						<when test="lineup.equals('작성일 ↓')">
							regdate DESC,bno_step DESC
						</when>
						<when test="lineup.equals('작성일 ↑')">
							regdate ASC,bno_step DESC
						</when>
						<when test="lineup.equals('조회수 ↓')">
							hits DESC,bno_step DESC
						</when>
						<when test="lineup.equals('조회수 ↑')">
							hits ASC,bno_step DESC
						</when>
						<when test="lineup.equals('추천수 ↓')">
							goodcnt DESC,bno_step DESC
						</when>
						<when test="lineup.equals('추천수 ↑')">
							goodcnt ASC,bno_step DESC
						</when>
					</choose>					
				) a
			)
		WHERE rnum BETWEEN #{pageStart} AND #{perPageNum}		
	</select>
	
	<!-- 댓글 UPDATE -->
	<update id="boardReplyUpdate" parameterType="rDTO">
		UPDATE boardreply SET 
		replycomment = #{replyComment} 
		WHERE rno_step = #{rno_step}
	</update>
	
	<!-- 리댓글 등록 -->
	<insert id="boardRecommentStore" parameterType="rDTO">
		INSERT INTO boardreply(rno, rno_step, bno, sessionuser, replycomment, ref, re_level)
		VALUES ((SELECT nvl(max(rno)+1, 1) from boardreply), #{rno_step}, #{bno}, #{sessionUser}, #{replyComment}, #{ref}, #{re_level})
	</insert>
	
	<!-- 리댓글 등록시 rno_step UPDATE -->
	<update id="boardReplyRno_stepUpdate" parameterType="Integer">
		UPDATE boardreply SET
		rno_step = rno_step + 1
		WHERE rno_step >= #{rno_step}
	</update>
	
	<select id="boardReplySelect" resultType="rDTO" parameterType="Integer">
		SELECT * FROM boardreply
		WHERE rno_step = #{rno_step}
	</select>
	
	<select id="boardFavoriteCheck" resultType="fDTO">
		SELECT * FROM favoriteboard
		WHERE bno = #{bno} AND sessionuser = #{sessionUser}
	</select>
	
	<insert id="boardFavoriteInsert" parameterType="fDTO">
		INSERT INTO favoriteboard (fno, bno, sessionuser)
		VALUES (seq_favoriteboard_fno.nextval, #{bno}, #{sessionUser})
	</insert>
	
	<select id="boardFavoriteSelect" resultType="fDTO">
		SELECT * FROM favoriteboard
		WHERE bno = #{bno} AND sessionuser = #{sessionUser}
	</select>
	
	<update id="boardFavoriteUpdate" parameterType="fDTO">
		UPDATE favoriteboard SET
		<choose>					
			<when test="useyn eq 'N'.toString()">
				useyn = 'Y' 
			</when>
			<when test="useyn eq 'Y'.toString()">
				useyn = 'N' 
			</when>
		</choose>
		WHERE bno = #{bno} AND sessionuser = #{sessionUser}
	</update>
	
	<!-- bno 번 게시글의 전체 좋아요 수 UPDATE -->
	<update id="boardGoodcntUpdate">
		UPDATE tblboard SET
		<choose>
			<when test="useyn eq 'N'.toString()">
				goodcnt = goodcnt + 1
			</when>
			<when test="useyn eq 'Y'.toString()">
				goodcnt = goodcnt - 1
			</when>		
		</choose>		
		WHERE bno = #{bno}
	</update>
	
	<!-- bno 번 게시글의 전체 좋아요 수 SELECT -->
	<select id="boardGoodcntSelect" resultType="int" parameterType="Integer">
		SELECT goodcnt FROM tblboard 
		WHERE bno = #{bno}
	</select>
	
	<!-- bno번 게시글의 filename을 SELECT -->
	<select id="getFileName" resultType="String" parameterType="Integer">
		SELECT filename FROM tblboard
		WHERE bno = #{bno}
	</select>
	
	<!-- bno번 게시글의 파일 다운시 downcnt횟수 증가 -->
	<update id="updateDowncnt" parameterType="Integer">
		UPDATE tblboard SET
		downcnt = downcnt + 1
		WHERE bno = #{bno}
	</update>
	
	<!-- bno번 답글 등록시 bno_step번 게시글의 bno_step >= #{bno_step}인  bno_step을 +1 증가 -->
	<update id="boardUpdateBnostep" parameterType="bDTO">
		UPDATE tblboard SET
		bno_step = bno_step + 1
		WHERE bno_step >= #{bno_step}
	</update>
	
	<!-- 답글 등록 -->
	<insert id="boardAnswerRegister" parameterType="bDTO">
		INSERT INTO tblboard(bno, bno_step, title, category, content, writer, filename, filesize, ref, re_level) 
		VALUES ((SELECT nvl(max(bno)+1, 1) from tblboard), #{bno_step}, #{title}, #{category}, #{content}, #{writer}, #{filename}, #{filesize}, #{ref}, #{re_level})
	</insert>
	
	<!-- 상세페이지 등급 출력 -->
	<select id="boardWriterGrade" resultType="String">
		SELECT mgrade FROM member
		WHERE mid = #{writer}
	</select>
	
	<!-- bno_step번 게시글 삭제시 bno_step > #{bno_step}인 bno_step을 -1로 UPDATE -->
	<update id="boardUpdatebnoup" parameterType="Integer">
		UPDATE tblboard SET
		bno_step = bno_step - 1
		WHERE bno_step > #{bno_step}
	</update>
	
	<!-- 댓글 삭제시 rno_step 수정 -->
	<update id="boardReplyRno_stepUpdate2" parameterType="Integer">
		UPDATE boardreply SET
		rno_step = rno_step - 1
		WHERE rno_step > #{rno_step}
	</update>
	
	<!-- 마이페이지 용 SELECT -->
	<select id="memSelect" resultType="mDTO">
		SELECT * FROM member
		WHERE mid = #{mid}
	</select>
	
</mapper>